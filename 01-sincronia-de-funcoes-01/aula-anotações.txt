O que é uma Promise?

- É uma função assíncrona( não corresponde em tempo real)

- Essa função pode estar em três lados:
    * Pending: quando a operação não foi concluída ainda.
    * Fulfilled: quando a operação foi realizada;
    * Rejected: quando a operação falhou

- A promise fornecem métodos para lidar com o resultado 
de uma operação assíncrona
    * .then() é chamado quando a Promise é resolvida
    * .catch é chamado apenas quando a Promise é rejeitada

------------------------------------------------------------
O que é um Callback?
- o callback chama uma função por parâmetro
- é executada quando a operação assíncrona é concluida 
- pode ser usado com a função .setTimeOut() para executar uma função
depois de um tempo esperando.
EX:

function callback() {
  console.log('Callback executado após 2 segundos');
}

setTimeout(callback, 2000);

- No código acima mostra que o setTimeout é uma função
 e o callback está sendo chamado por parâmetro e o tempo 
 de intervalo para chamá-lo.
 
-------------------------------------------------------------
O que é Async/Await?

- é uma caracteristica introduzida no JS para lidar com operações
assíncronas de uma maneira mais rápida e legível.
    * async: é usada pra definir uma função assíncrona 
    * await: é usada apenas dentro de uma função async
             é utilizada pra esperar uma Promise
- Facilita a visualização do fluxo de funções
- Não altera a perfomance de sua aplicação 
- Veio da galera do C#
- usar apenas quando necessitar tratar a resposta da chamada
